{"version":3,"file":"static/js/998.95949c60.chunk.js","mappings":"qLAGaA,E,OAASC,GAAAA,IAAH,0G,gJCANC,EAAOD,EAAAA,GAAAA,IAAH,kRAWJE,EAAQF,EAAAA,GAAAA,IAAH,qGAQLG,EAAOH,EAAAA,GAAAA,IAAH,mGAQJI,EAASJ,EAAAA,GAAAA,IAAH,8KAWNK,EAASL,EAAAA,GAAAA,KAAH,0UAYNM,EAAON,EAAAA,GAAAA,GAAH,yRAYJO,EAAWP,EAAAA,GAAAA,IAAH,yHAQRQ,EAAOR,EAAAA,GAAAA,EAAH,mJASJS,EAAST,EAAAA,GAAAA,OAAH,oY,0EC1ENU,EAAW,SAAC,GAAuD,IAAD,IAApDC,KAAQA,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,GAC1DC,GAAWC,EAAAA,EAAAA,MAEjB,OAAO,UAAChB,EAAD,YACH,SAACE,EAAD,CAAMe,I,4+BACN,SAAChB,EAAD,CAAOgB,IAAKC,EAAKC,IAAI,MACrB,SAACf,EAAD,WAAQ,SAACD,EAAD,CAAQc,IAAKJ,EAAQM,IAAKT,OAClC,SAACL,EAAD,KACA,UAACC,EAAD,YACI,UAACC,EAAD,WAAOI,EAAP,cACA,UAACJ,EAAD,WAAOK,EAAP,oBAEJ,SAACJ,EAAD,CAAQY,KAAK,SAASC,QAAS,kBAAMN,GAASO,EAAAA,EAAAA,GAAY,CAACR,GAAAA,EAAIF,UAAAA,IAAhC,EAA/B,sBAEP,EClBYW,EAAOxB,EAAAA,GAAAA,GAAH,6ICAJyB,EAAY,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAIvB,OACI,+BACA,SAACF,EAAD,UACKE,EAAMC,KAAI,SAAAhB,GAAI,OAAK,SAACD,EAAD,CAAUC,KAAMA,GAAWA,EAAKI,GAArC,OAI1B,E,SCfYa,EAAc,SAAAC,GAAK,OAAIA,EAAMH,MAAMI,KAAhB,EAEnBC,EAAkB,SAAAF,GAAK,OAAIA,EAAMH,MAAMM,SAAhB,EAEvBC,EAAc,SAAAJ,GAAK,OAAIA,EAAMH,MAAMQ,KAAhB,ECDnBC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzB,OAAO,SAAC3B,EAAD,CAAQY,KAAK,SAASC,QAASc,EAA/B,sBACV,ECoDD,EA/Ce,WACX,IAAMpB,GAAWC,EAAAA,EAAAA,MACbe,GAAYK,EAAAA,EAAAA,IAAYN,GACxBG,GAAQG,EAAAA,EAAAA,IAAYJ,GAC1B,GAAwBK,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACM9B,GAASyB,EAAAA,EAAAA,IAAYT,IAI3Be,EAAAA,EAAAA,YAAU,WACR3B,GAAS4B,EAAAA,EAAAA,GAAWL,IACjBM,MAAM,SAAAC,GACQ,IAATP,EACFG,EAASI,EAASC,UAElBC,IACAN,GAAS,SAAAO,GAAS,wBAAOA,IAAP,OAAqBH,EAASC,SAA9B,IAErB,GAEN,GAAE,CAAC/B,EAAUuB,IAGZ,IAIMS,EAAiB,WACrBE,OAAOC,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,UAEb,EAKKC,EAAe7C,EAAO8C,QAAU,EAEpC,OAAO,UAAC3D,EAAA,EAAD,WACFiC,IAAcE,IAAS,mDAC1B,SAACT,EAAD,CAAWC,MAAOe,IACjBgB,IAAgB,SAACtB,EAAD,CAAYC,OAnBhB,WACjBI,GAAQ,SAAAmB,GAAQ,OAAIA,EAAW,CAAf,GACf,MAmBF,C","sources":["components/Layout.js","components/UserCard/UserCard.styled.js","components/UserCard/UserCard.js","components/UsersList/UsersList.styled.js","components/UsersList/UsersList.js","redux/selectors.js","components/LoadButton/LoadButton.js","pages/Tweets.js"],"sourcesContent":["import styled from \"styled-components\";\r\n// import bgImage from '../images/purple-background.jpg';\r\n\r\nexport const Layout = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\nheight: 100vh;\r\nmax-width: 1200px;\r\n\r\n`","import styled from \"styled-components\";\r\n\r\n\r\nexport const Card = styled.div`\r\nposition: relative;\r\nwidth: 380px;\r\nheight: 460px;\r\nbackground: linear-gradient(114.99deg, #471CA9 -0.99%, #5736A3 54.28%, #4B2A99 78.99%);\r\nbox-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\r\nborder-radius: 20px;\r\npadding-top: 284px;\r\n\r\n`\r\n\r\nexport const Image = styled.img`\r\nposition: absolute;\r\nwidth: 308px;\r\nheight: 168px;\r\nleft: 36px;\r\ntop: 28px;\r\n`\r\n\r\nexport const Logo = styled.img`\r\nwidth: 76px;\r\nheight: 22px;\r\nposition: absolute;\r\nleft: 20px;\r\ntop: 20px;\r\n`\r\n\r\nexport const Avatar = styled.img`\r\nposition: absolute;\r\nwidth: 62px;\r\nheight: 62px;\r\nleft: 9.48px;\r\ntop: 9.42px;\r\nz-index: 1000;\r\nbackground-color: #5736A3;\r\nborder-radius: 85.9232px;\r\n`\r\n\r\nexport const Circle = styled.span`\r\nposition: absolute;\r\nwidth: 80px;\r\nheight: 80px;\r\nleft: 150px;\r\ntop: 178px;\r\nborder-radius: 85.9232px;\r\nbackground-color: #EBD8FF;\r\nbox-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06), inset 0px -2.19582px 4.39163px #AE7BE3, inset 0px 4.39163px 3.29372px #FBF8FF;\r\nz-index: 500;\r\nmargin-bottom: 26px;\r\n`\r\nexport const Line = styled.hr`\r\nmargin: 0;\r\nborder: 0;\r\nposition: absolute;\r\nwidth: 380px;\r\nheight: 8px;\r\nleft: 0px;\r\ntop: 214px;\r\nbackground: #EBD8FF;\r\nbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06), inset 0px -1.71846px 3.43693px #AE7BE3, inset 0px 3.43693px 2.5777px #FBF8FF;\r\n`\r\n\r\nexport const UserInfo = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\ngap: 16px;\r\nmargin-bottom: 26px;\r\n`\r\n\r\nexport const Text = styled.p`\r\nfont-family: 'Montserrat';\r\nfont-size: 20px;\r\nline-height: 24px;\r\ntext-transform: uppercase;\r\ncolor: #EBD8FF;\r\nmargin: 0;\r\n`\r\n\r\nexport const Button = styled.button`\r\nwidth: 196px;\r\nheight: 50px;\r\nbackground-color: #EBD8FF;\r\npadding: 14px 28px;\r\nbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\nborder-radius: 10.3108px;\r\nfont-family: 'Montserrat';\r\nfont-weight: 600;\r\nfont-size: 18px;\r\nline-height: 22px;\r\ntext-transform: uppercase;\r\ncolor: #373737;\r\nborder: 0;\r\ndisplay: block;\r\nmargin-right: auto;\r\nmargin-left: auto;\r\n`","import { Avatar, Button, Card, Circle, Image, Line, Logo, Text, UserInfo } from \"./UserCard.styled\";\r\nimport img from \"./bgpicture.png\";\r\nimport logo from './Logo.png';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateUsers } from \"redux/operations\";\r\n\r\n\r\n\r\nexport const UserCard = ({ user: { user, tweets, followers, avatar, id } }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    return <Card>\r\n        <Logo src={logo} />\r\n        <Image src={img} alt=\"\" />\r\n        <Circle><Avatar src={avatar} alt={user} /></Circle>\r\n        <Line />\r\n        <UserInfo>\r\n            <Text>{tweets} tweets</Text>\r\n            <Text>{followers} followers</Text>\r\n        </UserInfo>\r\n        <Button type=\"submit\" onClick={() => dispatch(updateUsers({id, followers}))}>follow</Button>\r\n    </Card>; \r\n}","import styled from \"styled-components\";\r\n\r\n\r\n\r\nexport const List = styled.ul`\r\nmargin:0;\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\ngap: 29px;\r\npadding-left: 0;\r\npadding-top: 60px;\r\nmargin-bottom: 30px;\r\n`","import { UserCard } from \"components/UserCard/UserCard\";\r\nimport { List } from \"./UsersList.styled\";\r\n\r\n\r\nexport const UsersList = ({users}) => {\r\n    // const users = useSelector(selectUsers);\r\n     \r\n    \r\n    return (\r\n        <>\r\n        <List>\r\n            {users.map(user => (<UserCard user={user} key={user.id} />))}\r\n        </List>\r\n        </>\r\n  )  \r\n}","export const selectUsers = state => state.users.items;\r\n\r\nexport const selectIsLoading = state => state.users.isLoading;\r\n\r\nexport const selectError = state => state.users.error;\r\n\r\nexport const selectFollow = state => state.follow.value;","import { Button } from \"components/UserCard/UserCard.styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const LoadButton = ({ onLoad }) => {\r\n    return <Button type=\"button\" onClick={onLoad}>load more</Button>\r\n}\r\n\r\nLoadButton.propTypes = {\r\nonLoad: PropTypes.func.isRequired,\r\n}","import { Layout } from \"components/Layout\";\r\nimport { fetchUsers } from \"redux/operations\";\r\nimport { UsersList } from \"components/UsersList/UsersList\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectIsLoading, selectError, selectUsers } from \"redux/selectors\";\r\nimport { useState } from \"react\";\r\nimport { LoadButton } from \"components/LoadButton/LoadButton\";\r\n\r\n\r\nconst Tweets = () => {\r\n    const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectIsLoading); \r\n  const error = useSelector(selectError);\r\n  const [page, setPage] = useState(1);\r\n  const [cards, setCards] = useState([]);\r\n  const tweets = useSelector(selectUsers);\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsers(page))\r\n      .then((response => {\r\n        if (page === 1) {\r\n          setCards(response.payload)\r\n        } else {\r\n          scrollLoadMore();\r\n          setCards(prevCards=> [...prevCards, ...response.payload])\r\n        }\r\n      }));\r\n    \r\n}, [dispatch, page]);\r\n  \r\n   \r\n  const loadMore = () => {\r\n  setPage(prevPage => prevPage + 1)\r\n  };\r\n  \r\n  const scrollLoadMore = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  \r\n\r\n \r\n  const showLoadMore = tweets.length >= 3;\r\n    \r\n    return <Layout>\r\n        {isLoading && !error && <b>Request in progress...</b>}\r\n      <UsersList users={cards} />\r\n      {showLoadMore && <LoadButton onLoad={loadMore} />}\r\n        </Layout>\r\n}\r\n\r\nexport default Tweets;"],"names":["Layout","styled","Card","Image","Logo","Avatar","Circle","Line","UserInfo","Text","Button","UserCard","user","tweets","followers","avatar","id","dispatch","useDispatch","src","img","alt","type","onClick","updateUsers","List","UsersList","users","map","selectUsers","state","items","selectIsLoading","isLoading","selectError","error","LoadButton","onLoad","useSelector","useState","page","setPage","cards","setCards","useEffect","fetchUsers","then","response","payload","scrollLoadMore","prevCards","window","scrollTo","top","document","documentElement","scrollHeight","behavior","showLoadMore","length","prevPage"],"sourceRoot":""}